
{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["description"],"id":"description","weight":1,"src":"description","getFn":null},{"path":["content"],"id":"content","weight":1,"src":"content","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"Building for production","n":0.577},"1":{"v":"Building for production and publishing online.","n":0.408},"2":{"v":"The build process will read the default configuration of the web application, from the file [`./config/default.json`](https://github.com/zuixjs/zuix-web-starter/blob/master/config/default.json). This file contains, among the other options, the base url of the application that by default is `/`: ./config/**default.json** ```json { &quot;zuix&quot;: { ... ... &quot;app&quot;: { &quot;title&quot;: &quot;My web application&quot;, &quot;baseUrl&quot;: &quot;/&quot;, ... } } } ``` Depending on the hosting service where the application will be published, the base url might not be the root of the webs","n":0.115}}},{"i":1,"$":{"0":{"v":"Getting started","n":0.707},"1":{"v":"Getting started with this template.","n":0.447},"2":{"v":"You can use this web-starter even with just basic knowledge about using the command-line shell and a text editor. If you have already some experience in programming, of course, a better choice would be a code editor or IDE. ## Prerequisites - [Install Node.js](https://nodejs.org/en/download/) version 14 or higher - Install `zuix`, command-line tool: ```shell npx zuix ``` ## Creating a new project To create a new project enter the following command: ```shell npx zuix new &lt;project_name&gt; [-t &lt;template_name&gt;] ``` Where `&lt;project_name&gt;` is the name of the new project and the optio","n":0.105}}},{"i":2,"$":{"0":{"v":"Liquid tags and shortcodes","n":0.5},"1":{"v":"About liquid template language and shortcodes","n":0.408},"2":{"v":"[Shortcodes](https://11ty.dev/docs/shortcodes/) can be used to process rendered content or as a handy way to output reusable fragments of content, and even web components, without having to deal with HTML or JavaScript. ## Web starter shortcodes ### layout This tag outputs a `div` with the given [Flex Layout Attributes](https://progressivered.com/fla/). It&#39;s mainly intended wrap and format `zx` shortcode output. {% raw %} ```liquid {% layout &#39;&lt;flex_layout_attributes&gt;&#39; [&#39;&lt;element_attr_1&gt;&#39; ... &#39;&lt;element_attr_n&gt;&#39;] %} (content) {% endlayout %} ``` {% e","n":0.115}}},{"i":3,"$":{"0":{"v":"Page editing and options","n":0.5},"1":{"v":"Layout, front matter options and custom liquid tags.","n":0.354},"2":{"v":"As described in the previous chapter, content pages are simple text files written using [Markdown](https://www.markdownguide.org/basic-syntax/) syntax, and also have [front matter data](https://www.11ty.dev/docs/data-frontmatter/) where is possible to specify the page layout, metadata, and other options for the current content. **Example:** `index.md` ```yaml --- layout: basic.liquid tags: blog group: blog options: highlight ext-links order: 2 coverPreview: ./images/cover-preview.png coverImage: ./images/cover.png title: My page title description: My page description (used for page metadata) a","n":0.12}}}]}
